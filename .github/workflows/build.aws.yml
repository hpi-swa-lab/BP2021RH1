name: Build & Deploy CI

on:
  push:
    branches: [483-add-deployment-scrips-for-aws]

jobs:
  build_bp_gallery:
    name: Build & Deploy bp-gallery
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./projects/bp-gallery

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install bp-gallery dependencies
        run: yarn install --frozen-lockfile
      - name: Install bp-graphql dependencies
        working-directory: ./projects/bp-graphql
        run: yarn install --frozen-lockfile
      - name: Generate APIConnector
        run: yarn generate-api
      - name: Build bp-gallery
        run: yarn build
      - name: Deploy build files on the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "projects/bp-gallery/build/"
          strip_components: 3
          target: ${{ secrets.AWS_REMOTE_TARGET }}
          rm: true
  build_bp_strapi:
    name: Build & Deploy bp-strapi
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./projects/bp-strapi

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$AWS_SSH_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          echo "$AWS_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_KEY: ${{secrets.AWS_SSH_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.AWS_SSH_KNOWN_HOSTS}}
      - name: Install PM2 for deployment
        run: yarn global add pm2
      - name: Deploy strapi on the server
        run: pm2 deploy ecosystem.aws.config.js production
        env:
          REMOTE_HOST: ${{secrets.AWS_REMOTE_HOST}}
          REMOTE_USER: ${{secrets.REMOTE_USER}}
