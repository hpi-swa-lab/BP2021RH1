{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react/recommended",
    "plugin:prettier/recommended"
  ],
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json", "./cypress/tsconfig.json", "./vite.config.ts"]
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier", "unused-imports"],
  "rules": {
    "no-alert": "warn",
    "prettier/prettier": ["warn", { "endOfLine": "auto" }],
    "react/prop-types": "off",
    "react/display-name": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/ban-ts-comment": ["error", { "ts-ignore": false }],
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/return-await": ["error", "in-try-catch"],
    "@typescript-eslint/prefer-string-starts-ends-with": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-inferrable-types": ["error", { "ignoreParameters": true }],
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "args": "none",
        "varsIgnorePattern": "_\\d*"
      }
    ],
    "unused-imports/no-unused-imports": "error",
    "no-constant-condition": ["error", { "checkLoops": false }],
    "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-empty-function": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": [
      "error",
      {
        "additionalHooks": "(useRecoilCallback|useEventCallback|useDrop|useDrag|useGuranteedMemo)"
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "import", "next": "*" },
      { "blankLine": "never", "prev": "import", "next": "import" },
      { "blankLine": "always", "prev": "export", "next": "*" }
    ],
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-call": "warn",
    "eqeqeq": "error",
    "@typescript-eslint/no-unnecessary-condition": [
      "error",
      { "allowConstantLoopConditions": true }
    ],
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-loss-of-precision": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "no-underscore-dangle": 0
  },
  "overrides": [
    {
      "files": ["**/*.test.tsx?"],
      "rules": {}
    }
  ]
}
