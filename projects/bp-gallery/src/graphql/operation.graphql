query getArchive($archiveId: ID!) {
  archiveTag(id: $archiveId) {
    data {
      id
      attributes {
        name
        shortDescription
        longDescription
        logo {
          data {
            id
            attributes {
              width
              height
              formats
              updatedAt
            }
          }
        }
        showcasePicture {
          data {
            id
            attributes {
              media {
                data {
                  id
                  attributes {
                    width
                    height
                    formats
                    url
                    updatedAt
                  }
                }
              }
            }
          }
        }
        links {
          data {
            id
            attributes {
              title
              url
            }
          }
        }
      }
    }
  }
}

query getPictureInfo($pictureId: ID!) {
  picture(id: $pictureId) {
    data {
      id
      attributes {
        descriptions(sort: "createdAt:asc") {
          data {
            id
            attributes {
              text
            }
          }
        }
        time_range_tag {
          data {
            id
            attributes {
              start
              end
              isEstimate
            }
          }
        }
        verified_time_range_tag {
          data {
            id
            attributes {
              start
              end
              isEstimate
            }
          }
        }
        keyword_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        verified_keyword_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        location_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        verified_location_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        person_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        verified_person_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        collections(publicationState: PREVIEW) {
          data {
            id
            attributes {
              name
            }
          }
        }
        comments(
          publicationState: PREVIEW
          sort: "date:desc"
          filters: { picture: { id: { eq: $pictureId } } }
        ) {
          data {
            id
            attributes {
              text
              author
              picture {
                data {
                  id
                }
              }
              date
              parentComment {
                data {
                  id
                }
              }
              childComments(publicationState: PREVIEW, sort: "date:asc") {
                data {
                  id
                }
              }
              publishedAt
              pinned
            }
          }
        }
        media {
          data {
            id
            attributes {
              width
              height
              formats
              url
              updatedAt
            }
          }
        }
        is_text
        linked_pictures {
          data {
            id
          }
        }
        linked_texts {
          data {
            id
          }
        }
        archive_tag {
          data {
            id
            attributes {
              name
            }
          }
        }
        likes
      }
    }
  }
}

query getDailyPictureInfo($pictureId: ID!) {
  picture(id: $pictureId) {
    data {
      id
      attributes {
        descriptions(sort: "createdAt:asc") {
          data {
            id
            attributes {
              text
            }
          }
        }
        time_range_tag {
          data {
            id
            attributes {
              start
              end
              isEstimate
            }
          }
        }
        comments {
          data {
            id
          }
        }
        likes
        media {
          data {
            id
            attributes {
              url
              updatedAt
            }
          }
        }
        archive_tag {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

query getMultiplePictureInfo($pictureIds: [ID!]) {
  pictures(filters: { id: { in: $pictureIds } }) {
    data {
      id
      attributes {
        descriptions(sort: "createdAt:asc") {
          data {
            id
            attributes {
              text
            }
          }
        }
        time_range_tag {
          data {
            id
            attributes {
              start
              end
              isEstimate
            }
          }
        }
        verified_time_range_tag {
          data {
            id
            attributes {
              start
              end
              isEstimate
            }
          }
        }
        keyword_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        verified_keyword_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        location_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        verified_location_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        person_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        verified_person_tags(sort: "updatedAt:asc") {
          data {
            id
            attributes {
              name
              updatedAt
            }
          }
        }
        collections(publicationState: PREVIEW) {
          data {
            id
            attributes {
              name
            }
          }
        }
        media {
          data {
            id
            attributes {
              url
              updatedAt
            }
          }
        }
        comments(publicationState: PREVIEW, sort: "date:asc") {
          data {
            id
            attributes {
              text
              author
              date
              publishedAt
              pinned
            }
          }
        }
        is_text
        linked_pictures {
          data {
            id
          }
        }
        linked_texts {
          data {
            id
          }
        }
        archive_tag {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

query getPictures(
  $filters: PictureFiltersInput!
  $pagination: PaginationArg!
  $sortBy: [String] = ["createdAt:desc"]
) {
  pictures(filters: $filters, pagination: $pagination, sort: $sortBy) {
    data {
      id
      attributes {
        is_text
        comments {
          data {
            id
          }
        }
        likes
        media {
          data {
            id
            attributes {
              width
              height
              formats
              url
              updatedAt
            }
          }
        }
      }
    }
  }
}

query getPicturesByAllSearch(
  $pagination: PaginationArg!
  $searchTerms: [String]!
  $searchTimes: [[String]]!
  $filterOutTexts: Boolean!
) {
  findPicturesByAllSearch(
    pagination: $pagination
    searchTerms: $searchTerms
    searchTimes: $searchTimes
    filterOutTexts: $filterOutTexts
  ) {
    id
    attributes {
      is_text
      comments {
        data {
          id
        }
      }
      likes
      media {
        data {
          id
          attributes {
            width
            height
            formats
            url
            updatedAt
          }
        }
      }
    }
  }
}

query getCollectionInfoByName($collectionName: String, $publicationState: PublicationState = LIVE) {
  collections(filters: { name: { eq: $collectionName } }, publicationState: $publicationState) {
    data {
      id
      attributes {
        name
        description
        child_collections(sort: "name:asc", publicationState: $publicationState) {
          data {
            id
            attributes {
              name
              thumbnail
              publishedAt
            }
          }
        }
      }
    }
  }
}

query getCollectionInfoById($collectionId: ID!) {
  collection(id: $collectionId) {
    data {
      id
      attributes {
        name
        description
        child_collections(sort: "name:asc", publicationState: PREVIEW) {
          data {
            id
            attributes {
              name
              publishedAt
              pictures(pagination: { limit: 1 }) {
                data {
                  id
                }
              }
              child_collections(pagination: { limit: 1 }, publicationState: PREVIEW) {
                data {
                  id
                }
              }
              parent_collections(publicationState: PREVIEW) {
                data {
                  id
                  attributes {
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query getRootCollection {
  browseRootCollection {
    data {
      attributes {
        current {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

mutation like($pictureId: ID!, $dislike: Boolean) {
  doLike(pictureId: $pictureId, dislike: $dislike)
}

mutation postComment(
  $id: ID!
  $author: String!
  $text: String!
  $date: DateTime!
  $parentCommentId: ID
) {
  createComment(
    data: {
      author: $author
      text: $text
      date: $date
      picture: $id
      publishedAt: null
      parentComment: $parentCommentId
    }
  ) {
    data {
      attributes {
        text
      }
    }
  }
}

query getKeywordTagsWithThumbnail(
  $filters: KeywordTagFiltersInput = {}
  $thumbnailFilters: PictureFiltersInput = {}
  $start: Int
  $limit: Int
  $sortBy: [String]
) {
  keywordTags(filters: $filters, pagination: { start: $start, limit: $limit }, sort: $sortBy) {
    data {
      id
      attributes {
        name
        thumbnail: pictures(filters: $thumbnailFilters, pagination: { limit: 1 }) {
          data {
            attributes {
              media {
                data {
                  attributes {
                    formats
                  }
                }
              }
            }
          }
        }
        verified_thumbnail: verified_pictures(
          filters: $thumbnailFilters
          pagination: { limit: 1 }
        ) {
          data {
            attributes {
              media {
                data {
                  attributes {
                    formats
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query getAllKeywordTags {
  keywordTags {
    data {
      id
      attributes {
        name
        visible
        accepted
        synonyms {
          name
        }
        child_tags {
          data {
            id
            attributes {
              name
            }
          }
        }
        parent_tags {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

mutation updateKeywordName($tagId: ID!, $name: String!) {
  updateKeywordTag(id: $tagId, data: { name: $name }) {
    data {
      id
    }
  }
}

mutation updateKeywordAcceptance($tagId: ID!, $accepted: Boolean) {
  updateKeywordTag(id: $tagId, data: { accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation createKeyword($name: String!, $accepted: Boolean) {
  createKeywordTag(data: { name: $name, accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation createSubKeyword($name: String!, $parentIDs: [ID!], $accepted: Boolean) {
  createKeywordTag(data: { name: $name, parent_tags: $parentIDs, accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation updateKeywordParent($tagID: ID!, $parentIDs: [ID!]) {
  updateKeywordTag(id: $tagID, data: { parent_tags: $parentIDs }) {
    data {
      id
    }
  }
}

mutation updateKeywordSynonyms($tagId: ID!, $synonyms: [ComponentCommonSynonymsInput]!) {
  updateKeywordTag(id: $tagId, data: { synonyms: $synonyms }) {
    data {
      id
    }
  }
}

query getLocationTagById($locationID: ID!) {
  locationTag(id: $locationID) {
    data {
      id
      attributes {
        name
        visible
        root
        accepted
        synonyms {
          name
        }
        child_tags {
          data {
            id
            attributes {
              name
            }
          }
        }
        parent_tags {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

query getLocationTagsWithThumbnail(
  $filters: LocationTagFiltersInput = {}
  $thumbnailFilters: PictureFiltersInput = {}
  $start: Int
  $limit: Int
  $sortBy: [String]
) {
  locationTags(filters: $filters, pagination: { start: $start, limit: $limit }, sort: $sortBy) {
    data {
      id
      attributes {
        name
        thumbnail: pictures(filters: $thumbnailFilters, pagination: { limit: 1 }) {
          data {
            attributes {
              media {
                data {
                  attributes {
                    formats
                  }
                }
              }
            }
          }
        }
        verified_thumbnail: verified_pictures(
          filters: $thumbnailFilters
          pagination: { limit: 1 }
        ) {
          data {
            attributes {
              media {
                data {
                  attributes {
                    formats
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query getAllLocationTags {
  locationTags {
    data {
      id
      attributes {
        name
        visible
        root
        accepted
        synonyms {
          name
        }
        child_tags {
          data {
            id
            attributes {
              name
            }
          }
        }
        parent_tags {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

query getPicturesForLocation($tagID: ID!) {
  locationTag(id: $tagID) {
    data {
      id
      attributes {
        pictures {
          data {
            id
          }
        }
        verified_pictures {
          data {
            id
          }
        }
      }
    }
  }
}

mutation createLocation($name: String!, $accepted: Boolean) {
  createLocationTag(data: { name: $name, accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation createSubLocation($name: String!, $parentIDs: [ID!], $accepted: Boolean) {
  createLocationTag(data: { name: $name, parent_tags: $parentIDs, accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation createSuperLocation($name: String!, $childIDs: [ID!], $accepted: Boolean) {
  createLocationTag(data: { name: $name, child_tags: $childIDs, accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation updateLocationParent($tagID: ID!, $parentIDs: [ID!]) {
  updateLocationTag(id: $tagID, data: { parent_tags: $parentIDs }) {
    data {
      id
    }
  }
}

mutation updateLocationChild($tagID: ID!, $childIDs: [ID!]) {
  updateLocationTag(id: $tagID, data: { child_tags: $childIDs }) {
    data {
      id
    }
  }
}

mutation updateLocationName($tagId: ID!, $name: String!) {
  updateLocationTag(id: $tagId, data: { name: $name }) {
    data {
      id
    }
  }
}

mutation updateLocationSynonyms($tagId: ID!, $synonyms: [ComponentCommonSynonymsInput]!) {
  updateLocationTag(id: $tagId, data: { synonyms: $synonyms }) {
    data {
      id
    }
  }
}

mutation updateLocationVisibility($tagId: ID!, $visible: Boolean!) {
  updateLocationTag(id: $tagId, data: { visible: $visible }) {
    data {
      id
    }
  }
}

mutation updateLocationRoot($tagId: ID!, $root: Boolean!) {
  updateLocationTag(id: $tagId, data: { root: $root }) {
    data {
      id
    }
  }
}

mutation updateLocationAcceptance($tagId: ID!, $accepted: Boolean) {
  updateLocationTag(id: $tagId, data: { accepted: $accepted }) {
    data {
      id
    }
  }
}

mutation updateKeywordVisibility($tagId: ID!, $visible: Boolean!) {
  updateKeywordTag(id: $tagId, data: { visible: $visible }) {
    data {
      id
    }
  }
}

query getPersonTagsWithThumbnail(
  $filters: PersonTagFiltersInput = {}
  $thumbnailFilters: PictureFiltersInput = {}
  $start: Int
  $limit: Int
  $sortBy: [String]
) {
  personTags(filters: $filters, pagination: { start: $start, limit: $limit }, sort: $sortBy) {
    data {
      id
      attributes {
        name
        thumbnail: pictures(filters: $thumbnailFilters, pagination: { limit: 1 }) {
          data {
            attributes {
              media {
                data {
                  attributes {
                    formats
                  }
                }
              }
            }
          }
        }
        verified_thumbnail: verified_pictures(
          filters: $thumbnailFilters
          pagination: { limit: 1 }
        ) {
          data {
            attributes {
              media {
                data {
                  attributes {
                    formats
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query getAllPersonTags {
  personTags {
    data {
      id
      attributes {
        name
        synonyms {
          name
        }
      }
    }
  }
}

mutation updatePersonName($tagId: ID!, $name: String!) {
  updatePersonTag(id: $tagId, data: { name: $name }) {
    data {
      id
    }
  }
}

mutation updatePersonSynonyms($tagId: ID!, $synonyms: [ComponentCommonSynonymsInput]!) {
  updatePersonTag(id: $tagId, data: { synonyms: $synonyms }) {
    data {
      id
    }
  }
}

query getAllCollections {
  collections(publicationState: PREVIEW) {
    data {
      id
      attributes {
        name
        parent_collections(publicationState: PREVIEW) {
          data {
            id
            attributes {
              name
            }
          }
        }
      }
    }
  }
}

query getAllArchiveTags($sortBy: [String] = ["createdAt:asc"]) {
  archiveTags(sort: $sortBy) {
    data {
      id
      attributes {
        name
        shortDescription
        showcasePicture {
          data {
            id
            attributes {
              media {
                data {
                  attributes {
                    url
                    updatedAt
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query getAllPicturesByArchive {
  archiveTags {
    data {
      id
      attributes {
        pictures {
          data {
            id
          }
        }
      }
    }
  }
}

query getDecadePreviewThumbnails(
  $filter40s: PictureFiltersInput!
  $filter50s: PictureFiltersInput!
  $filter60s: PictureFiltersInput!
  $filter70s: PictureFiltersInput!
  $filter80s: PictureFiltersInput!
  $filter90s: PictureFiltersInput!
) {
  decade40s: pictures(
    filters: {
      and: [$filter40s, { or: [{ is_text: { eq: false } }, { is_text: { null: true } }] }]
    }
    pagination: { limit: 1 }
  ) {
    data {
      attributes {
        media {
          data {
            attributes {
              formats
            }
          }
        }
      }
    }
  }
  decade50s: pictures(
    filters: {
      and: [$filter50s, { or: [{ is_text: { eq: false } }, { is_text: { null: true } }] }]
    }
    pagination: { limit: 1 }
  ) {
    data {
      attributes {
        media {
          data {
            attributes {
              formats
            }
          }
        }
      }
    }
  }
  decade60s: pictures(
    filters: {
      and: [$filter60s, { or: [{ is_text: { eq: false } }, { is_text: { null: true } }] }]
    }
    pagination: { limit: 1 }
  ) {
    data {
      attributes {
        media {
          data {
            attributes {
              formats
            }
          }
        }
      }
    }
  }
  decade70s: pictures(
    filters: {
      and: [$filter70s, { or: [{ is_text: { eq: false } }, { is_text: { null: true } }] }]
    }
    pagination: { limit: 1 }
  ) {
    data {
      attributes {
        media {
          data {
            attributes {
              formats
            }
          }
        }
      }
    }
  }
  decade80s: pictures(
    filters: {
      and: [$filter80s, { or: [{ is_text: { eq: false } }, { is_text: { null: true } }] }]
    }
    pagination: { limit: 1 }
  ) {
    data {
      attributes {
        media {
          data {
            attributes {
              formats
            }
          }
        }
      }
    }
  }
  decade90s: pictures(
    filters: {
      and: [$filter90s, { or: [{ is_text: { eq: false } }, { is_text: { null: true } }] }]
    }
    pagination: { limit: 1 }
  ) {
    data {
      attributes {
        media {
          data {
            attributes {
              formats
            }
          }
        }
      }
    }
  }
}

mutation login($username: String!, $password: String!) {
  login(input: { identifier: $username, password: $password }) {
    jwt
  }
}

mutation createPersonTag($name: String!) {
  createPersonTag(data: { name: $name }) {
    data {
      id
    }
  }
}

mutation createKeywordTag($name: String!) {
  createKeywordTag(data: { name: $name }) {
    data {
      id
    }
  }
}

mutation createLocationTag($name: String!) {
  createLocationTag(data: { name: $name }) {
    data {
      id
    }
  }
}

mutation createArchiveTag($name: String!) {
  createArchiveTag(data: { name: $name }) {
    data {
      id
    }
  }
}

mutation createLink($title: String!, $url: String!, $archive_tag: ID!) {
  createLink(data: { title: $title, url: $url, archive_tag: $archive_tag }) {
    data {
      id
    }
  }
}

mutation updateLink($id: ID!, $data: LinkInput!) {
  updateLink(id: $id, data: $data) {
    data {
      id
    }
  }
}

mutation deleteLink($id: ID!) {
  deleteLink(id: $id) {
    data {
      id
    }
  }
}

mutation mergePersonTags($targetId: ID!, $sourceId: ID!) {
  mergePersonTags(targetId: $targetId, sourceId: $sourceId)
}

mutation mergeKeywordTags($targetId: ID!, $sourceId: ID!) {
  mergeKeywordTags(targetId: $targetId, sourceId: $sourceId)
}

mutation mergeLocationTags($targetId: ID!, $sourceId: ID!) {
  mergeLocationTags(targetId: $targetId, sourceId: $sourceId)
}

mutation deletePersonTag($id: ID!) {
  deletePersonTag(id: $id) {
    data {
      id
    }
  }
}

mutation deleteLocationTag($id: ID!) {
  deleteLocationTag(id: $id) {
    data {
      id
    }
  }
}

mutation deleteKeywordTag($id: ID!) {
  deleteKeywordTag(id: $id) {
    data {
      id
    }
  }
}

mutation createSubCollection($name: String!, $parentId: ID!, $publishedAt: DateTime!) {
  createCollection(
    data: { name: $name, parent_collections: [$parentId], publishedAt: $publishedAt }
  ) {
    data {
      id
    }
  }
}

mutation updatePicture($pictureId: ID!, $data: JSON!) {
  updatePictureWithTagCleanup(id: $pictureId, data: $data)
}

mutation bulkEdit($pictureIds: [ID!]!, $data: JSON!) {
  doBulkEdit(ids: $pictureIds, data: $data)
}

mutation createPicture($data: PictureInput!) {
  createPicture(data: $data) {
    data {
      id
    }
  }
}

mutation unpublishPicture($id: ID!) {
  updatePicture(id: $id, data: { publishedAt: null }) {
    data {
      id
    }
  }
}

query getPicturesForCollection($collectionId: ID!) {
  collection(id: $collectionId) {
    data {
      id
      attributes {
        pictures {
          data {
            id
          }
        }
      }
    }
  }
}

mutation setPicturesForCollection($pictureIds: [ID]!, $collectionId: ID!) {
  updateCollection(id: $collectionId, data: { pictures: $pictureIds }) {
    data {
      id
    }
  }
}

mutation updateCollection($collectionId: ID!, $data: CollectionInput!) {
  updateCollection(id: $collectionId, data: $data) {
    data {
      id
    }
  }
}

mutation updateArchive($archiveId: ID!, $data: ArchiveTagInput!) {
  updateArchiveTag(id: $archiveId, data: $data) {
    data {
      id
    }
  }
}

query getUnverifiedComments {
  comments(filters: { publishedAt: { null: true } }, publicationState: PREVIEW) {
    data {
      id
      attributes {
        picture {
          data {
            id
            attributes {
              media {
                data {
                  id
                  attributes {
                    width
                    height
                    formats
                    updatedAt
                  }
                }
              }
            }
          }
        }
        text
        author
      }
    }
  }
}

mutation fixCommentText($commentId: ID!, $text: String!) {
  updateComment(id: $commentId, data: { text: $text }) {
    data {
      id
    }
  }
}

mutation acceptComment($commentId: ID!, $currentTime: DateTime!) {
  updateComment(id: $commentId, data: { publishedAt: $currentTime }) {
    data {
      id
    }
  }
}

mutation declineComment($commentId: ID!) {
  deleteComment(id: $commentId) {
    data {
      id
    }
  }
}

mutation pinComment($commentId: ID!) {
  updateComment(id: $commentId, data: { pinned: true }) {
    data {
      id
    }
  }
}

mutation unpinComment($commentId: ID!) {
  updateComment(id: $commentId, data: { pinned: false }) {
    data {
      id
    }
  }
}

mutation deleteCollection($collectionId: ID!) {
  deleteCollection(id: $collectionId) {
    data {
      id
    }
  }
}

mutation mergeCollections($targetId: ID!, $sourceId: ID!) {
  mergeCollections(targetId: $targetId, sourceId: $sourceId)
}

query me {
  me {
    role {
      name
    }
    username
    email
  }
}
